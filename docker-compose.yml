networks:
  observability:
    driver: bridge

services:
  jaeger:
    container_name: cucumber-playwright-jaeger
    image: jaegertracing/all-in-one:1.54
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_OTLP_HTTP_HOST_PORT=:4318
      - COLLECTOR_OTLP_GRPC_HOST_PORT=:4317
    ports:
      - "16686:16686"
      - "14250:14250"
      - "6831:6831/udp"
      - "4317:4317"
      - "4318:4318"
    networks:
      - observability

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otelcol-config.yaml"]
    volumes:
      - ./otelcol-config.yaml:/etc/otelcol-config.yaml
    ports:
      - "24317:4317"  # OTLP gRPC
      - "24318:4318"  # OTLP HTTP
      - "8888:8888"   # Internal metrics
      - "9464:9464"   # Prometheus exporter
      - "55679:55679" # zpages
      - "1777:1777"   # pprof
    depends_on:
      - jaeger
      - prometheus
    networks:
      - observability
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: cucumber-playwright-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-storage:/prometheus
    networks:
      - observability

  grafana:
    image: grafana/grafana-oss:latest
    container_name: cucumber-playwright-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards  # <-- corrected dashboard mount
    depends_on:
      - prometheus
    networks:
      - observability

  k6:
    image: grafana/k6:latest
    container_name: k6
    command: run --out experimental-prometheus-rw=http://prometheus:9090/api/v1/write --tag testid=cucumber-automation /scripts/test.js
    volumes:
      - ./scripts:/scripts
    depends_on:
      - prometheus
    networks:
      - observability
    profiles:
      - testing  # Only start when explicitly requested

  weaviate:
    container_name: cucumber-playwright-weaviate
    image: semitechnologies/weaviate:latest
    ports:
      - "8080:8080"
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=text2vec-openai
      - ENABLE_MODULES=text2vec-openai
      - OPENAI_APIKEY=${OPENAI_API_KEY}
    volumes:
      - weaviate-storage:/var/lib/weaviate
    networks:
      - observability

volumes:
  grafana-storage:
  prometheus-storage:
  weaviate-storage: